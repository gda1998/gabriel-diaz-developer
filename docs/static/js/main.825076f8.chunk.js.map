{"version":3,"sources":["types/types.js","hooks/useSectionShow.js","helpers/select.js","helpers/encryption.js","reducer/haveBeenVisitedReducer.js","reducer/initialState.js","hooks/useTourState.js","components/includes/react-tour/BtnHandleTourSteps.js","data/tourOptions.js","data/en/tourDataEn.js","data/es/tourDataEs.js","components/includes/react-tour/TourComponent.js","hooks/useLang.js","components/includes/home/TextAnimation.js","hooks/useTextAnimation.js","components/includes/home/NavItem.js","data/navLinks.js","components/layouts/NavBar.js","components/includes/home/SocialLinkItem.js","data/socialNetworks.js","components/includes/home/SocialLinks.js","docs/Gabriel_Diaz_Resume.pdf","docs/Curriculum_Gabriel_Diaz.pdf","components/includes/home/ButtonCV.js","components/layouts/Header.js","components/includes/resume/ResumeItem.js","data/cityDefault.js","data/en/educationEn.js","data/es/educationEs.js","components/includes/resume/Education.js","data/en/experienceEn.js","data/es/experienceEs.js","components/includes/resume/Jobs.js","components/pages/Resume.js","components/includes/services/ServiceItem.js","data/servicesData.js","components/pages/Services.js","components/includes/contact/ContactCardsItem.js","data/contactInfoData.js","components/includes/contact/ContactCards.js","helpers/isEmptyInput.js","helpers/swalToast.js","components/includes/contact/FormContact.js","hooks/useForm.js","components/pages/Contact.js","components/errors/Error404.js","routes/AppRouter.js","components/includes/loading/LoadComponentDefault.js","config/i18next-config.js","App.js","index.js"],"names":["types","home","contact","portfolio","useSectionShow","useState","sectionShow","setSectionShow","useEffect","changeSectionShow","setTimeout","clearTimeout","select","el","all","trim","document","querySelectorAll","querySelector","blowfishInstance","require","haveBeenVisitedReducer","state","action","type","initialState","init","localStorage","getItem","jsonString","textToDecrypt","decrypted","decrypt","base64Decode","trimZeros","decryptString","JSON","parse","useTourState","useReducer","haveBeenVisitedList","dispatch","encryptedJSON","textToEncrypt","encrypted","encrypt","base64Encode","encryptText","stringify","setItem","BtnHandleTourSteps","useModalOverlay","tour","useContext","ShepherdTourContext","options","setTourState","getTourState","forEach","event","on","hide","className","onClick","style","display","start","buttons","this","back","classes","text","next","tourOptions","defaultStepOptions","arrow","cancelIcon","enabled","highlightClass","modalOverlayOpeningPadding","when","show","h4","createElement","spanBadge","classList","add","innerText","steps","indexOf","currentStep","length","currentStepElement","header","insertAdjacentElement","insertBefore","exitOnEsc","keyboardNavigation","tourDataEn","defaultTour","attachTo","element","computerTour","advanceOn","selector","click","beforeShowPromise","Promise","resolve","phoneTour","tourDataEs","TourComponent","pageName","useLang","lang","tourData","undefined","window","innerWidth","getTourSteps","defaultProps","useTranslation","t","i18n","language","changeLanguage","contains","TextAnimation","currentWord","setCurrentWord","words","addingWord","newWord","counter","intervalAnimation","setInterval","slice","clearInterval","useTextAnimation","NavItem","path","name","activeClassName","to","navbar","remove","navbarToggle","toggle","navLinks","NavBar","navBarRef","useRef","navToggleRef","handleLangToggle","id","ref","map","item","current","SocialLinkItem","icon","url","href","target","rel","socialNetworks","SocialLinks","displayBlock","ButtonCV","pdf_en","pdf_es","download","Header","isHome","fontSize","dangerouslySetInnerHTML","__html","ResumeItem","title","dates","place","textAlign","educationEn","educationEs","Education","education","experienceEn","experienceEs","Jobs","jobs","Resume","web_tools","ServiceItem","servicesData","Services","ContactCardsItem","includes","contactInfoData","join","ContactCards","isEmptyInput","index","array","required","value","test","swalToast","position","withReactContent","Swal","fire","toast","showConfirmButton","timer","timerProgressBar","FormContact","recaptchaOptions","useRecaptchaNet","recaptchaRef","form","setForm","formElements","isValidForm","useForm","email","subject","message","handleInputChange","reset","validateForm","handleSubmit","e","a","preventDefault","executeAsync","emailjs","sendForm","then","error","onSubmit","placeholder","onChange","pattern","rows","onErrored","console","theme","sitekey","size","Contact","Error404","replace","useHistory","About","React","lazy","Portfolio","AppRouter","pathname","useLocation","exact","component","LoadComponentDefault","role","use","Backend","LanguageDetector","initReactI18next","backend","loadPath","addPath","fallbackLng","App","basename","process","fallback","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.825076f8.chunk.js","sourcesContent":["const types = {\r\n    home: '[haveBeenVisited] home',\r\n    contact: '[haveBeenVisited] contact',\r\n    portfolio: '[haveBeenVisited] portfolio'\r\n};\r\n\r\nexport default types;","import { useEffect, useState } from 'react';\r\n\r\nexport const useSectionShow = () => {\r\n    const [sectionShow, setSectionShow] = useState('');\r\n\r\n    useEffect(() => {\r\n        const changeSectionShow = setTimeout( () => setSectionShow('section-show'), 150);\r\n        return () => clearTimeout(changeSectionShow);\r\n    }, []);\r\n\r\n    return sectionShow;\r\n}","/**\r\n * Easy selector helper function\r\n * \r\n * @param  {String} el The querySelector\r\n * @param  {Boolean} all=false\r\n */\r\nconst select = (el, all = false) => {\r\n    el = el.trim()\r\n    if (all)\r\n        return [...document.querySelectorAll(el)];\r\n    else\r\n        return document.querySelector(el);\r\n}\r\n\r\nexport default select;","const Blowfish = require('javascript-blowfish');\r\n\r\n// Declaramos la llave de encriptado y la instancia de encriptacion\r\nconst encryptionKey = 'Bienaventurados los pobres de espíritu, porque de ellos es el Reino de los Cielos.';\r\nconst blowfishInstance = new Blowfish(encryptionKey);\r\n\r\n/**\r\n * Encripta un texto\r\n * @param  {String} textToEncrypt Texto a encriptar\r\n * @returns  {String}\r\n */\r\nexport const encryptText = (textToEncrypt) => {\r\n    const encrypted = blowfishInstance.encrypt(textToEncrypt);\r\n    return blowfishInstance.base64Encode(encrypted);\r\n}\r\n\r\n/**\r\n * Desencripta un texto\r\n * @param  {String} textToEncrypt Texto a desencriptar\r\n * @returns  {String}\r\n */\r\nexport const decryptString = (textToDecrypt) => {\r\n    const decrypted = blowfishInstance.decrypt( blowfishInstance.base64Decode(textToDecrypt) );\r\n    return blowfishInstance.trimZeros(decrypted);\r\n}","import types from '../types/types';\r\n\r\n/**\r\n * Metodo reducer para saber si un usuario ha visitado anteriormente una pagina del sitio\r\n * \r\n * @param  {JSON} state={}\r\n * @param  {JSON} action\r\n * @returns  {JSON}\r\n */\r\nexport const haveBeenVisitedReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case types.home:\r\n            return {\r\n                ...state,\r\n                home: false\r\n            };\r\n        case types.portfolio:\r\n            return {\r\n                ...state,\r\n                portfolio: false\r\n            };\r\n        case types.contact:\r\n            return {\r\n                ...state,\r\n                contact: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","export const initialState = {\r\n    home: true,\r\n    portfolio: true,\r\n    contact: true\r\n};","// * React Hooks\r\nimport { useEffect, useReducer } from 'react';\r\n\r\n// * Helpers\r\nimport { decryptString, encryptText } from '../helpers/encryption';\r\n\r\n// * Reducers\r\nimport { haveBeenVisitedReducer } from '../reducer/haveBeenVisitedReducer';\r\n\r\n// * Data\r\nimport { initialState } from '../reducer/initialState';\r\n\r\n// * Types\r\nimport types from '../types/types';\r\n\r\n/**\r\n * We get the JSON form localStorage, or in case of not existing, we get the initial state of reducer\r\n */\r\nconst init = () => {\r\n    if ( localStorage.getItem('tourState') !== null ){\r\n        const jsonString = decryptString( localStorage.getItem('tourState') );\r\n        return JSON.parse(jsonString);\r\n    }\r\n    else return initialState;\r\n}\r\n\r\nexport const useTourState = () => {\r\n    const [haveBeenVisitedList, dispatch] = useReducer(haveBeenVisitedReducer, {}, init);\r\n\r\n    const setTourState = (type) => {\r\n        dispatch({\r\n            type: type\r\n        });\r\n    }\r\n\r\n    const getTourState = (type) => {\r\n        switch (type) {\r\n            case types.home:\r\n                return haveBeenVisitedList.home;\r\n            case types.portfolio:\r\n                return haveBeenVisitedList.portfolio;\r\n            case types.contact:\r\n                return haveBeenVisitedList.contact;\r\n            default:\r\n                return haveBeenVisitedList;\r\n        }\r\n    }\r\n\r\n    // This useEffect will be executed every time the reducer has been changed\r\n    useEffect(() => {\r\n        // We encrypt the current state of reducer y it is saved in the localStorage\r\n        const encryptedJSON = encryptText( JSON.stringify(haveBeenVisitedList) );\r\n        localStorage.setItem('tourState', encryptedJSON);\r\n    }, [haveBeenVisitedList]);\r\n\r\n    return [ setTourState, getTourState ];\r\n}","// * React Hooks\r\nimport React, { useContext, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// * Hooks and libraries\r\nimport { ShepherdTourContext } from 'react-shepherd';\r\nimport { useTourState } from '../../../hooks/useTourState';\r\n\r\nexport const BtnHandleTourSteps = ({ useModalOverlay, type }) => {\r\n    // We get the context of Shepherd library\r\n    const tour = useContext(ShepherdTourContext);\r\n\r\n    // We indicate if the page we are gonna put the modalOverlay\r\n    useEffect(() => {\r\n        tour.options.useModalOverlay = useModalOverlay;\r\n    }, [tour, useModalOverlay])\r\n\r\n    // We get the functions of useTourState hook\r\n    const [ setTourState, getTourState ] = useTourState();\r\n\r\n    // We indicate that the page has been shown and completed the tour with setTourState(type)\r\n    ['close', 'cancel', 'complete', 'hide'].forEach(event => tour.on(event, () => \r\n        setTourState(type)\r\n    ));\r\n\r\n    // We ask if this is the first time the tour will be shownn, if the condition is false, we close the tour\r\n    tour.on('start', () => {\r\n        setTimeout(() => !getTourState(type) && tour.hide() , 10);\r\n    });\r\n\r\n    // We return a hidden botton that will be clicked every time the main component is loaded\r\n    return (\r\n        <>\r\n            <button\r\n                className=\"btnRemoveOverlay\" \r\n                onClick={ () => tour.options.useModalOverlay = false }\r\n                style={{ display: 'none' }}\r\n            >\r\n                Remove Overlay\r\n            </button>\r\n            <button \r\n                className=\"button-dark\" \r\n                onClick={ tour.start } \r\n                style={{ display: 'none' }}\r\n            >\r\n                Start Tour\r\n            </button>\r\n        </>\r\n    );\r\n}\r\n\r\nBtnHandleTourSteps.propTypes = {\r\n    type: PropTypes.string.isRequired,\r\n    useModalOverlay: PropTypes.bool.isRequired\r\n}","export const buttons = [\r\n    {\r\n        action() {\r\n            return this.back();\r\n        },\r\n        classes: 'button button-small',\r\n        text: '<i class=\"bi bi-caret-left-fill\"></i>'\r\n    },\r\n    {\r\n        action() {\r\n            return this.next();\r\n        },\r\n        classes: 'button button-small',\r\n        text: '<i class=\"bi bi-caret-right-fill\"></i>'\r\n    }\r\n];\r\n\r\nconst tourOptions = {\r\n    defaultStepOptions: {\r\n        arrow: false,\r\n        cancelIcon: {\r\n            enabled: true\r\n        },\r\n        classes: 'react-tour',\r\n        highlightClass: 'highlight',\r\n        modalOverlayOpeningPadding: 10,\r\n        when: {\r\n            show() {\r\n                // Creamos el elemento span y h4\r\n                const h4 = document.createElement('h4');\r\n                const spanBadge = document.createElement('span');\r\n\r\n                // Agregamos las clases y el texto del spanBadge\r\n                spanBadge.classList.add('position-absolute', 'top-100', 'start-50', 'translate-middle', 'badge', 'rounded-pill', 'bg-success');\r\n                spanBadge.innerText = `${this.tour.steps.indexOf(this.tour.currentStep) + 1}/${this.tour.steps.length}`;\r\n\r\n                // Creamos los elementos que hace referencia al Tour\r\n                const currentStepElement = this.tour.currentStep.el;\r\n                const header = currentStepElement.querySelector('.shepherd-header');\r\n\r\n                // Agregamos el span a la ventana modal\r\n                h4.insertAdjacentElement('afterBegin', spanBadge);\r\n                header.insertBefore(h4, currentStepElement.querySelector('.shepherd-cancel-icon') );\r\n            }\r\n        },\r\n    },\r\n    exitOnEsc: false,\r\n    keyboardNavigation: false\r\n    // useModalOverlay: true,\r\n};\r\n\r\nexport default tourOptions;","import { buttons } from '../tourOptions';\r\n\r\nconst tourDataEn = {\r\n    defaultTour : {\r\n        contact: [\r\n            {\r\n                attachTo: { element: '#formContact', on: 'top' },\r\n                buttons: [ buttons[1] ],\r\n                text: 'You can use this form to send me an email.',\r\n            }\r\n        ]\r\n    },\r\n    computerTour : {\r\n        home: [\r\n            {\r\n                advanceOn: { selector: '.btn-handle-toogle', event: 'click' },\r\n                attachTo: { element: '.btn-handle-toogle', on: 'bottom' },\r\n                text: 'Use this button to change the language of the web page.'\r\n            },\r\n        ],\r\n        portfolio: [\r\n            {\r\n                attachTo: { element: '#portfolio-flters', on: 'bottom' },\r\n                buttons: buttons,\r\n                text: 'Click on any of the filters to get the projects of that classification.',\r\n            },\r\n            {\r\n                advanceOn: { selector: '.portfolio-wrap', event: 'mouseover' },\r\n                attachTo: { element: '.portfolio-wrap', on: 'bottom' },\r\n                buttons: buttons,\r\n                text: 'Place your mouse in the center of the project image.',\r\n            },\r\n            {\r\n                advanceOn: { selector: '.btn-portfolio', event: 'click' },\r\n                attachTo: { element: '.btn-portfolio', on: 'bottom' },\r\n                buttons: [ \r\n                    buttons[0],\r\n                    {\r\n                        action() {\r\n                            document.querySelector('.btn-portfolio').click();\r\n                        },\r\n                        classes: 'button button-small',\r\n                        text: '<i class=\"bi bi-caret-right-fill\"></i>'\r\n                    }\r\n                ],\r\n                text: 'Click on this button to see the project details.',\r\n            },\r\n            {\r\n                advanceOn: { selector: '.arrow-left', event: 'click' },\r\n                attachTo: { element: '.arrow-left', on: 'right' },\r\n                beforeShowPromise: () => {\r\n                    return new Promise(resolve => {\r\n                        document.querySelector('.btnRemoveOverlay').click();\r\n                        resolve();\r\n                    });\r\n                },\r\n                buttons: [ buttons[1] ],\r\n                text: 'Use this button to change to the previous project',\r\n            },\r\n            {\r\n                advanceOn: { selector: '.arrow-right', event: 'click' },\r\n                attachTo: { element: '.arrow-right', on: 'left' },\r\n                buttons: buttons,\r\n                text: 'Use this button to change to the next project.',\r\n            },\r\n            {\r\n                advanceOn: { selector: '.carousel-control-prev', event: 'click' },\r\n                attachTo: { element: '.carousel-control-prev', on: 'right' },\r\n                buttons: buttons,\r\n                text: 'Click on this part to see the previous image',\r\n            },\r\n            {\r\n                advanceOn: { selector: '.carousel-control-next', event: 'click' },\r\n                attachTo: { element: '.carousel-control-next', on: 'left' },\r\n                buttons: buttons,\r\n                text: 'Click on this part to see the next image.',\r\n            }\r\n        ]\r\n    },\r\n    phoneTour : {\r\n        home: [\r\n            {\r\n                advanceOn: { selector: '.mobile-nav-toggle', event: 'click' },\r\n                attachTo: {\r\n                    element: '.mobile-nav-toggle',\r\n                    on: 'bottom'\r\n                },\r\n                text: 'Click on hamburger menu.'\r\n            },\r\n            {\r\n                advanceOn: { selector: '.btn-handle-toogle', event: 'click' },\r\n                attachTo: {\r\n                    element: '.btn-handle-toogle'\r\n                },\r\n                text: 'Use this button to change the language of the web page.'\r\n            }\r\n        ],\r\n        portfolio: [\r\n            {\r\n                attachTo: { element: '#portfolio-flters', on: 'bottom' },\r\n                buttons: buttons,\r\n                text: 'Click on any of the filters to get the projects of that classification.'\r\n            },\r\n            {\r\n                advanceOn: { selector: '.btn-portfolio', event: 'click' },\r\n                attachTo: { element: '.portfolio-wrap', on: 'top' },\r\n                buttons: [ \r\n                    buttons[0],\r\n                    {\r\n                        action() {\r\n                            document.querySelector('.btn-portfolio').click();\r\n                        },\r\n                        classes: 'button button-small',\r\n                        text: '<i class=\"bi bi-caret-right-fill\"></i>'\r\n                    }\r\n                ],\r\n                text: 'Touch the pictura and then touch the chain icon to view the project details.',\r\n            },\r\n            {\r\n                advanceOn: { selector: '.modal-body', event: 'click' },\r\n                attachTo: { element: '.modal-body' },\r\n                beforeShowPromise: () => {\r\n                    return new Promise(resolve => {\r\n                        document.querySelector('.btnRemoveOverlay').click();\r\n                        resolve();\r\n                    });\r\n                },\r\n                buttons:[ buttons[1] ],\r\n                classes: 'sherpherdTo75Percent',\r\n                text: 'Click on the buttons at the every side of the window, or if the buttons aren\\'t visible, click on every side of the window to change of project.',\r\n            },\r\n            {\r\n                advanceOn: { selector: '.carousel-control-prev', event: 'click' },\r\n                attachTo: { element: '.carousel-control-prev', on: 'right' },\r\n                buttons: buttons,\r\n                classes: 'sherpherdTo75Percent',\r\n                text: 'Click on this part to see the previous image.',\r\n            },\r\n            {\r\n                advanceOn: { selector: '.carousel-control-next', event: 'click' },\r\n                attachTo: { element: '.carousel-control-next', on: 'left' },\r\n                buttons: buttons,\r\n                classes: 'sherpherdTo75Percent',\r\n                text: 'Click on this part to see the next image.',\r\n            }\r\n        ]\r\n    }\r\n}\r\n\r\nexport default tourDataEn;","import { buttons } from '../tourOptions';\r\n\r\nconst tourDataEs = {\r\n    defaultTour : {\r\n        contact: [\r\n            {\r\n                attachTo: { element: '#formContact', on: 'top' },\r\n                buttons: [ buttons[1] ],\r\n                text: 'Puedes usar este formulario para enviarme un correo electrónico.',\r\n            }\r\n        ]\r\n    },\r\n    computerTour : {\r\n        home: [\r\n            {\r\n                advanceOn: { selector: '.btn-handle-toogle', event: 'click' },\r\n                attachTo: { element: '.btn-handle-toogle', on: 'bottom' },\r\n                text: 'Utiliza este botón para cambiar el idioma de la página web.'\r\n            },\r\n        ],\r\n        portfolio: [\r\n            {\r\n                attachTo: { element: '#portfolio-flters', on: 'bottom' },\r\n                buttons: buttons,\r\n                text: 'Da click en cualquiera de los filtros para obtener los proyectos de esa clasificación.'\r\n            },\r\n            {\r\n                advanceOn: { selector: '.portfolio-wrap', event: 'mouseover' },\r\n                attachTo: { element: '.portfolio-wrap', on: 'bottom' },\r\n                buttons: buttons,\r\n                text: 'Posiciona tu ratón al centro de la imagen del proyecto.',\r\n            },\r\n            {\r\n                advanceOn: { selector: '.btn-portfolio', event: 'click' },\r\n                attachTo: { element: '.btn-portfolio', on: 'bottom' },\r\n                buttons: [ \r\n                    buttons[0],\r\n                    {\r\n                        action() {\r\n                            document.querySelector('.btn-portfolio').click();\r\n                        },\r\n                        classes: 'button button-small',\r\n                        text: '<i class=\"bi bi-caret-right-fill\"></i>'\r\n                    }\r\n                ],\r\n                text: 'Da click en este botón para ver los detalles del proyecto.',\r\n            },\r\n            {\r\n                advanceOn: { selector: '.arrow-left', event: 'click' },\r\n                attachTo: { element: '.arrow-left', on: 'right' },\r\n                beforeShowPromise: () => {\r\n                    return new Promise(resolve => {\r\n                        document.querySelector('.btnRemoveOverlay').click();\r\n                        resolve();\r\n                    });\r\n                },\r\n                buttons: [ buttons[1] ],\r\n                text: 'Usa este botón para ver el portafolio anterior a este.',\r\n            },\r\n            {\r\n                advanceOn: { selector: '.arrow-right', event: 'click' },\r\n                attachTo: { element: '.arrow-right', on: 'left' },\r\n                buttons: buttons,\r\n                text: 'Usa este botón para ver el portafolio siguiente a este.',\r\n            },\r\n            {\r\n                advanceOn: { selector: '.carousel-control-prev', event: 'click' },\r\n                attachTo: { element: '.carousel-control-prev', on: 'right' },\r\n                buttons: buttons,\r\n                text: 'Click en esta parte para ver la imagen anterior.',\r\n            },\r\n            {\r\n                advanceOn: { selector: '.carousel-control-next', event: 'click' },\r\n                attachTo: { element: '.carousel-control-next', on: 'left' },\r\n                buttons: buttons,\r\n                text: 'Click en esta parte para ver la imagen siguiente.',\r\n            }\r\n        ]\r\n    },\r\n    phoneTour : {\r\n        home: [\r\n            {\r\n                advanceOn: { selector: '.mobile-nav-toggle', event: 'click' },\r\n                attachTo: { element: '.mobile-nav-toggle', on: 'bottom' },\r\n                text: 'Da click en el menú hamburguesa.'\r\n            },\r\n            {\r\n                advanceOn: { selector: '.btn-handle-toogle', event: 'click' },\r\n                attachTo: { element: '.btn-handle-toogle' }, \r\n                text: 'Utiliza este botón para cambiar el idioma de la página web.'\r\n            }\r\n        ],\r\n        portfolio: [\r\n            {\r\n                attachTo: { element: '#portfolio-flters', on: 'bottom' },\r\n                buttons: buttons,\r\n                text: 'Da click en cualquiera de los filtros para obtener los proyectos de esa clasificación.'\r\n            },\r\n            {\r\n                advanceOn: { selector: '.btn-portfolio', event: 'click' },\r\n                attachTo: { element: '.portfolio-wrap', on: 'top' },\r\n                buttons: [ \r\n                    buttons[0],\r\n                    {\r\n                        action() {\r\n                            document.querySelector('.btn-portfolio').click();\r\n                        },\r\n                        classes: 'button button-small',\r\n                        text: '<i class=\"bi bi-caret-right-fill\"></i>'\r\n                    }\r\n                ],\r\n                text: 'Toca la imagen y después toca el ícono de cadena para ver los detalles de los proyectos.',\r\n            },\r\n            {\r\n                advanceOn: { selector: '.modal-body', event: 'click' },\r\n                attachTo: { element: '.modal-body' },\r\n                beforeShowPromise: () => {\r\n                    return new Promise(resolve => {\r\n                        document.querySelector('.btnRemoveOverlay').click();\r\n                        resolve();\r\n                    });\r\n                },\r\n                buttons:[ buttons[1] ],\r\n                classes: 'sherpherdTo75Percent',\r\n                text: 'Da click en los botones extremos de la ventana, o si no están visibles los botones, da click en los extremos de la ventana para cambiar de proyecto.',\r\n            },\r\n            {\r\n                advanceOn: { selector: '.carousel-control-prev', event: 'click' },\r\n                attachTo: { element: '.carousel-control-prev', on: 'right' },\r\n                buttons: buttons,\r\n                classes: 'sherpherdTo75Percent',\r\n                text: 'Click en esta parte para ver la imagen anterior.',\r\n            },\r\n            {\r\n                advanceOn: { selector: '.carousel-control-next', event: 'click' },\r\n                attachTo: { element: '.carousel-control-next', on: 'left' },\r\n                buttons: buttons,\r\n                classes: 'sherpherdTo75Percent',\r\n                text: 'Click en esta parte para ver la imagen siguiente.',\r\n            }\r\n        ]\r\n    }\r\n}\r\n\r\nexport default tourDataEs;","// * React Hooks\r\nimport React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// * Hooks and libraries\r\nimport { useLang } from '../../../hooks/useLang';\r\nimport { ShepherdTour } from 'react-shepherd';\r\n\r\n// * Components\r\nimport { BtnHandleTourSteps } from './BtnHandleTourSteps';\r\n\r\n// * Data\r\nimport tourOptions from '../../../data/tourOptions';\r\nimport tourDataEn from '../../../data/en/tourDataEn';\r\nimport tourDataEs from '../../../data/es/tourDataEs';\r\n\r\n\r\n/**\r\n * @param  {String} {pageName The object name where the tour steps will be obtained\r\n * @param  {String} type} The object name, which keeps the condition that if the tour has already been shown\r\n */\r\nexport const TourComponent = ({ useModalOverlay, pageName, type }) => {\r\n    const [ , ,lang ] = useLang();\r\n\r\n    const getTourSteps = () => {\r\n        const tourData = lang === 'en' ? tourDataEn : tourDataEs;\r\n        if( tourData.defaultTour[pageName] !== undefined ) return tourData.defaultTour[pageName];\r\n        // Computadora > 992, Telefono o Tablet <= 992\r\n        const tourAccordingToSize = window.innerWidth > 992 ? tourData.computerTour : tourData.phoneTour;\r\n        return tourAccordingToSize[pageName];\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.querySelector('.button-dark').click();\r\n    }, []);\r\n\r\n    return (\r\n        <ShepherdTour \r\n            tourOptions={ tourOptions }\r\n            steps={ getTourSteps() }\r\n        >\r\n            <BtnHandleTourSteps \r\n                useModalOverlay={ useModalOverlay }\r\n                type={ type }\r\n            />\r\n        </ShepherdTour>\r\n    );\r\n}\r\n\r\nTourComponent.propTypes = {\r\n    pageName: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    useModalOverlay: PropTypes.bool\r\n}\r\n\r\nTourComponent.defaultProps = {\r\n    useModalOverlay: true\r\n}","import { useTranslation } from 'react-i18next';\r\n\r\nexport const useLang = () => {\r\n\r\n    const [ t, i18n ] = useTranslation(['global']);\r\n    const lang = i18n.language;\r\n\r\n    const handleLangToggle = () => {\r\n        const lang = i18n.language === 'en' ? 'es' : 'en';\r\n        i18n.changeLanguage(lang);\r\n        if( document.querySelector('#navbar').classList.contains('navbar-mobile') ){\r\n            document.querySelector('.bi').click();\r\n        }\r\n    }\r\n\r\n    return [ t, handleLangToggle, lang ];\r\n}\r\n","// * React Hooks\r\nimport React from 'react';\r\n\r\n// * Hooks and libraries\r\nimport { useTextAnimation } from '../../../hooks/useTextAnimation';\r\n\r\nexport const TextAnimation = () => {\r\n    const currentWord = useTextAnimation();\r\n    return (\r\n        <span>\r\n            { currentWord }\r\n            <span className=\"cursor\">|</span>\r\n        </span>\r\n    );\r\n}","// * React Hooks\r\nimport { useState, useEffect } from 'react';\r\n\r\n// * Hooks and libraries\r\nimport { useLang } from './useLang';\r\n\r\n/**\r\n * Obtenemos la palabra o el pedazo de palabra a mostrar mediante la animación \r\n */\r\nexport const useTextAnimation = () => {\r\n    // Obtenemos la funcion t para traducir el arreglo de palabras\r\n    const [ t ] = useLang();\r\n\r\n    // useState de la palabra a retornar\r\n    const [currentWord, setCurrentWord] = useState('');\r\n    \r\n    /**\r\n     * Usamos el useEffect para crear y destruir el setInterval de la animacion\r\n     * Este useEffect se ejecutara cada vez que se vuelva a declarar a t()\r\n     * t() sera redeclarado cuando se cambie el idioma de la app\r\n     */\r\n    useEffect(() => {\r\n        \r\n        // Obtenemos el listado de las palabras a mostrar y quitar\r\n        const words = [ t('words-cursor.web-developer'), t('words-cursor.front-end-dev'), t('words-cursor.back-end-dev')];\r\n        // Variables para hacer el efecto de animacion\r\n        let addingWord = false,\r\n        newWord = '',\r\n        counter = 0;\r\n\r\n        // Creamos el intervalo de la animacion\r\n        const intervalAnimation = setInterval( () => {\r\n            /* Delete word */\r\n            if(newWord.length > 0 && !addingWord) {\r\n                // Quitamos una letra a la palabra en curso y hacemos el setCurrentWord\r\n                newWord = newWord.slice(0, -1);\r\n                setCurrentWord(newWord);\r\n            } else\r\n                addingWord = true;\r\n            \r\n            /* Add word */\r\n            if(addingWord) {\r\n                if( newWord.length < words[counter].length ) {\r\n                    // Agregamos una letra a la palabra en curso y hacemos el setCurrentWord\r\n                    newWord = words[counter].slice(0,    newWord.length + 1);\r\n                    setCurrentWord(newWord);\r\n                } else {\r\n                    counter < words.length && counter++;\r\n                    addingWord = false;\r\n                }\r\n            }\r\n        \r\n            /* Reset counter */\r\n            counter === words.length && (counter = 0);\r\n        }, 100);\r\n        \r\n        // Quitamos el Interval cada vez que se desmonte el componente\r\n        return () => clearInterval(intervalAnimation);\r\n    }, [t]);\r\n\r\n    // Retornamos la palabra a mostrar\r\n    return currentWord;\r\n}","// * React Hooks\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// * Hooks and libraries\r\nimport { useLang } from '../../../hooks/useLang';\r\n\r\n// * Components\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n// * Helpers\r\nimport select from '../../../helpers/select';\r\n\r\nexport const NavItem = ({ path, name }) => {\r\n    const [ t ] = useLang();\r\n\r\n    const handleNavClick = () => {\r\n        // Navbar Mobile\r\n        const navbar = select('#navbar');\r\n        if (navbar.classList.contains('navbar-mobile')) {\r\n            navbar.classList.remove('navbar-mobile')\r\n            \r\n            // Btn Hamburguer Toggle\r\n            const navbarToggle = select('.mobile-nav-toggle')\r\n            navbarToggle.classList.toggle('bi-list')\r\n            navbarToggle.classList.toggle('bi-x')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <li>\r\n            <NavLink \r\n                className=\"nav-link\" \r\n                activeClassName=\"active\" \r\n                to={path} \r\n                onClick={ handleNavClick } \r\n            >\r\n                { t(name) }\r\n            </NavLink> \r\n        </li>\r\n    )\r\n}\r\n\r\nNavItem.propTypes = {\r\n    path: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired\r\n};","const navLinks = [\r\n    {\r\n        path: '/home', \r\n        name: 'header.home'\r\n    },\r\n    {\r\n        path: '/about', \r\n        name: 'header.about'\r\n    },\r\n    {\r\n        path: '/resume', \r\n        name: 'header.resume'\r\n    },\r\n    {\r\n        path: '/services', \r\n        name: 'header.services'\r\n    },\r\n    {\r\n        path: '/portfolio', \r\n        name: 'header.portfolio'\r\n    },\r\n    {\r\n        path: '/contact', \r\n        name: 'header.contact'\r\n    }\r\n];\r\n\r\nexport default navLinks;","// * React Hooks\r\nimport React, { useRef } from 'react';\r\n\r\n// * Hooks and libraries\r\nimport { useLang } from '../../hooks/useLang';\r\n\r\n// * Components\r\nimport { NavItem } from '../includes/home/NavItem';\r\n\r\n// * Data\r\nimport navLinks from '../../data/navLinks';\r\n\r\nexport const NavBar = () => {\r\n    const navBarRef = useRef();\r\n    const navToggleRef = useRef();\r\n    const [ t, handleLangToggle ] = useLang();\r\n\r\n    const handleToggle = () => {\r\n        // Navbar\r\n        navBarRef.current.classList.toggle('navbar-mobile');\r\n\r\n        // Btn Hamburguer Toggle\r\n        navToggleRef.current.classList.toggle('bi-list');\r\n        navToggleRef.current.classList.toggle('bi-x');\r\n    };\r\n\r\n    return (\r\n        <nav id=\"navbar\" className=\"navbar\" ref={ navBarRef }>\r\n\r\n            <ul>\r\n                {\r\n                    navLinks.map( item => <NavItem key={item.path} {...item} />)\r\n                }\r\n                <li>\r\n                    <button className=\"btn link btn-handle-toogle\" onClick={ handleLangToggle }>\r\n                        { t('header.lang') }\r\n                    </button>\r\n                </li>\r\n            </ul>\r\n            <i className=\"bi bi-list mobile-nav-toggle\" onClick={ handleToggle } ref={ navToggleRef }></i>\r\n\r\n        </nav>/* /.navbar */\r\n    );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const SocialLinkItem = ({ icon, url }) => {\r\n    return (\r\n        <a href={ url } target=\"_blank\" rel=\"noreferrer\">\r\n            <i className={ icon }></i>\r\n        </a>\r\n    );\r\n}\r\n\r\nSocialLinkItem.propTypes = {\r\n    icon: PropTypes.string.isRequired,\r\n    url: PropTypes.string.isRequired,\r\n};","const socialNetworks = [\r\n    {\r\n        icon: 'bi bi-whatsapp',\r\n        url: 'https://api.whatsapp.com/send?phone=522222520342&text=Hola%20Gabriel.%20Vengo%20de%20tu%20p%C3%A1gina%20web%20y%20quisiera%20platicar%20contigo%20para%20una%20idea%20de%20un%20sitio%20web.'\r\n    },\r\n    {\r\n        icon: 'bi bi-linkedin',\r\n        url: 'https://www.linkedin.com/in/gabriel-diaz-amador/'\r\n    },\r\n    {\r\n        icon: 'bi bi-facebook',\r\n        url: 'https://www.facebook.com/gabriel.diazamador'\r\n    },\r\n    {\r\n        icon: 'bi bi-instagram',\r\n        url: 'https://www.instagram.com/gda1998/'\r\n    },\r\n    {\r\n        icon: 'ri-spotify-fill',\r\n        url: 'https://open.spotify.com/user/w1m781a1w6w5isk893j2ktu0m'\r\n    }\r\n];\r\n\r\nexport default socialNetworks;","// * React Hooks\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// * Components\r\nimport { SocialLinkItem } from './SocialLinkItem';\r\n\r\n// * Data\r\nimport socialNetworks from '../../../data/socialNetworks';\r\n\r\nexport const SocialLinks = ({ displayBlock }) => {\r\n    return (\r\n        <div className=\"social-links\" style={displayBlock}>\r\n            {\r\n                socialNetworks.map( item => <SocialLinkItem key={item.icon} {...item} /> )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nSocialLinks.propTypes = {\r\n    isDisplayBlock: PropTypes.object\r\n}","export default __webpack_public_path__ + \"static/media/Gabriel_Diaz_Resume.af3588cb.pdf\";","export default __webpack_public_path__ + \"static/media/Curriculum_Gabriel_Diaz.0fd119b7.pdf\";","// * React Hooks\r\nimport React from 'react';\r\n\r\n// * Hooks and libraries\r\nimport { useLang } from '../../../hooks/useLang';\r\n\r\n// * Documents\r\nimport pdf_en from '../../../docs/Gabriel_Diaz_Resume.pdf';\r\nimport pdf_es from '../../../docs/Curriculum_Gabriel_Diaz.pdf';\r\n\r\n\r\nexport const ButtonCV = () => {\r\n\r\n    const [ t, , lang ] = useLang();\r\n\r\n    return (\r\n        <a\r\n            className=\"button\" \r\n            href={ lang === 'en' ? pdf_en : pdf_es }\r\n            id=\"CV_Gabriel_Diaz\"\r\n            download=\"CV_Gabriel_Diaz\"\r\n        >\r\n            { t('header.download-cv') }\r\n        </a>\r\n    );\r\n}\r\n","// * React Hooks\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// * Hooks and libraries\r\nimport { useLang } from '../../hooks/useLang';\r\n\r\n// * Components\r\nimport { TourComponent } from '../includes/react-tour/TourComponent';\r\nimport { Link } from 'react-router-dom';\r\nimport { TextAnimation } from '../includes/home/TextAnimation';\r\nimport { NavBar } from './NavBar';\r\nimport { SocialLinks } from '../includes/home/SocialLinks';\r\nimport { ButtonCV } from '../includes/home/ButtonCV';\r\n\r\n// * Types\r\nimport types from '../../types/types';\r\n\r\nexport const Header = ({ isHome=false }) => {\r\n\r\n    const [ t ] = useLang();\r\n\r\n    return (\r\n        // ======= Header =======\r\n        <header id=\"header\" className={ !isHome ? 'header-top' : '' }>\r\n\r\n            { isHome && <TourComponent useModalOverlay={ false } pageName=\"home\" type={ types.home } /> }\r\n            \r\n            <div className=\"container\">\r\n                <h1> <Link to=\"/home\">Gabriel Díaz</Link> </h1>\r\n                <h2>\r\n                    <small style={{ fontSize: '24px' }} dangerouslySetInnerHTML={{ __html: t('header.welcome-message', { name: 'Gabriel Díaz' }) }} />\r\n                    <small style={{ fontSize: '24px' }}> <TextAnimation /> </small>\r\n                </h2>\r\n                <NavBar />\r\n                <SocialLinks />\r\n                <ButtonCV />\r\n            </div>{/* /.container */}\r\n        </header>/* End Header */\r\n    );\r\n}\r\n\r\nHeader.propTypes = {\r\n    isHome: PropTypes.bool.isRequired\r\n}","// * React Hooks\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// * Data\r\nimport cityDefault from '../../../data/cityDefault';\r\n\r\nexport const ResumeItem = ({ title, dates, place, text }) => {\r\n\r\n    return (\r\n        <div className=\"resume-item\">\r\n            <h4>{ title }</h4>\r\n            <h5>{ dates }</h5>\r\n            <p><em>{ place } { cityDefault }</em></p>\r\n            {\r\n                text && <p style={{ textAlign: 'justify' }}>{text}</p>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nResumeItem.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    dates: PropTypes.string.isRequired,\r\n    place: PropTypes.string.isRequired,\r\n    text: PropTypes.string\r\n}","const cityDefault = 'Puebla, México';\r\n\r\nexport default cityDefault;","const educationEn = [\r\n    {\r\n        id: 'tsu-degree',\r\n        title: 'Engineering in Information and Comunication Technologies',\r\n        dates: '2018 - 2020',\r\n        place: 'Technological University of Puebla,'\r\n    },\r\n    {\r\n        id: 'engineer-degree',\r\n        title: 'University Technician in Computer Systems',\r\n        dates: '2016 - 2018',\r\n        place: 'Technological University of Puebla,'\r\n    },\r\n];\r\n\r\nexport default educationEn;","const educationEs = [\r\n    {\r\n        id: 'tsu-degree',\r\n        title: 'Ingeniería en Tecnologías de la Información y Comunicación',\r\n        dates: '2018 - 2020',\r\n        place: 'Universidad Tecnológica de Puebla,'\r\n    },\r\n    {\r\n        id: 'engineer-degree',\r\n        title: 'Técnico Superior Universitario en Sistemas Informáticos',\r\n        dates: '2016 - 2018',\r\n        place: 'Universidad Tecnológica de Puebla,'\r\n    },\r\n];\r\n\r\nexport default educationEs;","// * React Hooks\r\nimport React from 'react';\r\n\r\n// * Hooks and libraries\r\nimport { useLang } from '../../../hooks/useLang';\r\n\r\n// * Components\r\nimport { ResumeItem } from './ResumeItem';\r\n\r\n// * Data\r\nimport educationEn from '../../../data/en/educationEn';\r\nimport educationEs from '../../../data/es/educationEs';\r\n\r\nexport const Education = () => {\r\n    const [ ,, lang ] = useLang();\r\n    const education = lang === 'en' ? educationEn : educationEs;\r\n    return (\r\n        <>\r\n            {\r\n                education.map( item => <ResumeItem key={ item.id }  {...item } /> )\r\n            }\r\n        </>\r\n    )\r\n}\r\n","const experienceEn = [\r\n    {\r\n        id: 'eks-practices',\r\n        title: 'Web Developer (Training)',\r\n        dates: '05/13/2021 - Today',\r\n        place: 'EKS Solutions,',\r\n        text: 'I’m helping to carry out detections and corrections of problems of the systems of a client of the company EKS Solutions, using Oracle tools.'\r\n    },\r\n    {\r\n        id: 'humanly-job',\r\n        title: 'Web Developer',\r\n        dates: '07/16/2020 - 09/15/2020',\r\n        place: 'Humanly Software,',\r\n        text: 'I helped on the maintenance and migration to a more recent version of one of their systems focused on employees managing, like their salaries, working days, among others.'\r\n    },\r\n    {\r\n        id: 'tsystems-second-practices',\r\n        title: 'Web Developer (Professional Practices)',\r\n        dates: '01/17/2020 - 05/24/2020',\r\n        place: 'T - Systems México S.A de C.V.,',\r\n        text: 'Develop the bases of a web system focused on the automatic assigment of activities in one of the areas of the company.'\r\n    },\r\n    {\r\n        id: 'utp-ss',\r\n        title: 'Instructor (Social Service)',\r\n        dates: '09/13/2019 - 12/13/2019',\r\n        place: 'Technological University of Puebla,',\r\n        text: 'I taught to one teacher at my university to use technologies like AJAX and JavaScript, so that she could replicate that knowledge to her students.'\r\n    },\r\n    {\r\n        id: 'tsystems-first-practices',\r\n        title: 'Web Developer (Professional Practices)',\r\n        dates: '14/05/2018 - 24/08/2018',\r\n        place: 'T - Systems México S.A de C.V.,',\r\n        text: 'I made a web site for one of the areas of the company in wich its mainly functionality was have control of the inventory of the materials that their used to work in that area.'\r\n    }\r\n];\r\n\r\nexport default experienceEn;","const experienceEs = [\r\n    {\r\n        id: 'eks-practices',\r\n        title: 'Desarrollador Web (Entrenamiento)',\r\n        dates: '13/05/2021 - Actualmente',\r\n        place: 'EKS Solutions,',\r\n        text: 'Apoyo en la detección y corrección de problemas de los sistemas de uno de los clientes de la empresa EKS Solutions, utilizando herramientas de Oracle.'\r\n    },\r\n    {\r\n        id: 'humanly-job',\r\n        title: 'Desarrollador Web',\r\n        dates: '16/07/2020 - 15/09/2020',\r\n        place: 'Humanly Software,',\r\n        text: 'Apoyo en el mantenimiento y migración a una versión más reciente de uno de sus sistemas enfocado a la gestión del personal, como sus sueldos, jornadas laborales, entre otros.'\r\n    },\r\n    {\r\n        id: 'tsystems-second-practices',\r\n        title: 'Desarrollador Web (Prácticas)',\r\n        dates: '17/01/2020 - 24/05/2020',\r\n        place: 'T - Systems México S.A de C.V.,',\r\n        text: 'Desarrollar las bases de un sistema web enfocado a la asignación automática de actividades de una de las áreas de la empresa.'\r\n    },\r\n    {\r\n        id: 'utp-ss',\r\n        title: 'Instructor (S. Social)',\r\n        dates: '13/09/2019 - 13/12/2019',\r\n        place: 'Universidad Tecnológica de Puebla,',\r\n        text: 'Le enseñé a una docente de dicha universidad a utilizar tecnologías como AJAX y JavaScript, esto con el fin de que ella pudiera replicar esos conocimientos a sus alumnos.'\r\n    },\r\n    {\r\n        id: 'tsystems-first-practices',\r\n        title: 'Desarrollador Web (Prácticas)',\r\n        dates: '14/05/2018 - 24/08/2018',\r\n        place: 'T - Systems México S.A de C.V.,',\r\n        text: 'Desarrollé un sitio web para una de las áreas de la empresa en cual su función principal fue el de llevar el control del inventario de los materiales que utilizaban para trabajar en dicha área.'\r\n    }\r\n];\r\n\r\nexport default experienceEs;","// * React Hooks\r\nimport React from 'react';\r\n\r\n// * Hooks and libraries\r\nimport { useLang } from '../../../hooks/useLang';\r\n\r\n// * Components\r\nimport { ResumeItem } from './ResumeItem';\r\n\r\n// * Data\r\nimport experienceEn from '../../../data/en/experienceEn';\r\nimport experienceEs from '../../../data/es/experienceEs';\r\n\r\n\r\nexport const Jobs = () => {\r\n    const [ ,, lang ] = useLang();\r\n    const jobs = lang === 'en' ? experienceEn : experienceEs;\r\n    return (\r\n        <>\r\n            {\r\n                jobs.map( item => <ResumeItem key={ item.id } { ...item } /> )\r\n            }   \r\n        </>\r\n    )\r\n}\r\n","// * React Hooks\r\nimport React from 'react';\r\n\r\n// * Hooks and libraries\r\nimport { useLang } from '../../hooks/useLang';\r\nimport { useSectionShow } from '../../hooks/useSectionShow';\r\n\r\n// * Components\r\nimport { Education } from '../includes/resume/Education';\r\nimport { Jobs } from '../includes/resume/Jobs';\r\n\r\nexport const Resume = () => {\r\n    const sectionShow = useSectionShow();\r\n    const [ t ] = useLang();\r\n    const translationVars = { \r\n        web_tools: 'PHP, Laravel, JavaScript, AJAX, React,'\r\n    };\r\n\r\n    return (\r\n        // ======= Resume Section =======\r\n        <section id=\"resume\" className={ `resume ${sectionShow}` }>\r\n\r\n            <div className=\"container\">\r\n\r\n                <div className=\"section-title\">\r\n                    <h2>{ t('header.resume') }</h2>\r\n                    <p>{ t('resume.check-resume') }</p>\r\n                </div>{/* /.section-title */}\r\n\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"col-lg-6\">\r\n                        <h3 className=\"resume-title\">{ t('resume.sumary') }</h3>\r\n                        <div className=\"resume-item pb-0\">\r\n                            <h4>{ t('resume.introduction') }</h4>\r\n                            <p style={{ textAlign: 'justify' }}>\r\n                                <em dangerouslySetInnerHTML={{ __html: t('resume.sumary-text', translationVars) }} />\r\n                            </p>\r\n                        </div>\r\n\r\n                        <h3 className=\"resume-title\">{ t('resume.education') }</h3>\r\n                        <Education />\r\n                    </div>{/* /.col-lg-6 */}\r\n                    \r\n                    <div className=\"col-lg-6\">\r\n                        <h3 className=\"resume-title\">{ t('resume.experience') }</h3>\r\n                        <Jobs />\r\n                    </div>{/* /.col-lg-6 */}\r\n\r\n                </div>{/* /.row */}\r\n\r\n            </div>{/* /.container */}\r\n\r\n        </section>/* End Resume Section */\r\n    );\r\n}","// * React Hooks\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// * Hooks and libraries\r\nimport { useLang } from '../../../hooks/useLang';\r\n\r\nexport const ServiceItem = ({ title, text, icon, className }) => {\r\n    const [ t ] = useLang();\r\n\r\n    return (\r\n        <div className={ `col-md-6 ${ className ? className : '' }` }>\r\n            <div className=\"icon-box\">\r\n                <div className=\"icon\">\r\n                    <i className={ icon }></i>\r\n                </div>\r\n                <h4>{ t(title) }</h4>\r\n                <p>{ t(text) }</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nServiceItem.propTypes = {\r\n    title : PropTypes.string.isRequired,\r\n    text : PropTypes.string.isRequired,\r\n    icon : PropTypes.string.isRequired,\r\n    className : PropTypes.string\r\n}","const servicesData = [\r\n    {\r\n        id: 'service.back-end',\r\n        title: 'services.back-end',\r\n        text: 'services.back-end-text',\r\n        icon: 'bx bx-server'\r\n    },\r\n    {\r\n        id: 'service.front-end',\r\n        title: 'services.front-end',\r\n        text: 'services.front-end-text',\r\n        icon: 'bx bx-desktop',\r\n        className: 'mt-4 mt-md-0'\r\n    }\r\n];\r\n\r\nexport default servicesData;","// * React Hooks\r\nimport React from 'react';\r\n\r\n// * Hooks and libraries\r\nimport { useSectionShow } from '../../hooks/useSectionShow';\r\nimport { useLang } from '../../hooks/useLang';\r\n\r\n// * Components\r\nimport { ServiceItem } from '../includes/services/ServiceItem';\r\n\r\n// * Data\r\nimport servicesData from '../../data/servicesData';\r\n\r\nexport const Services = () => {\r\n    const sectionShow = useSectionShow();\r\n    const [ t ] = useLang();\r\n\r\n    return (\r\n        // ======= Services Section =======\r\n        <section id=\"services\" className={ `services ${sectionShow}` }>\r\n            \r\n            <div className=\"container\">\r\n\r\n                <div className=\"section-title\">\r\n                    <h2>{ t('header.services') }</h2>\r\n                    <p>{ t('services.my-services') }</p>\r\n                </div>{/* /.section-title */}\r\n\r\n                <div className=\"row\">\r\n                    {\r\n                        servicesData.map( item => <ServiceItem key={ item.id } { ...item } /> )\r\n                    }\r\n                </div>{/* /.row */}\r\n\r\n            </div>{/* /.container */}\r\n\r\n        </section>/* End Services Section */\r\n    );\r\n}","// * React Hooks\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n// * Hooks and libraries\r\nimport { useLang } from '../../../hooks/useLang'\r\n\r\n// * Components\r\nimport { SocialLinks } from '../home/SocialLinks';\r\n\r\nexport const ContactCardsItem = ({ className, icon, title, text, fontSize }) => {\r\n    const [ t ] = useLang();\r\n\r\n    return (\r\n        <div className={ `${className} d-flex align-items-stretch` }>\r\n            <div className=\"info-box\">\r\n                <i className={ icon }></i>\r\n                <h3>{ t(title) }</h3>\r\n                {\r\n                    // Si existe la propiedad text, colocamos un parrafo, si no, ponemos los links de las redes sociales\r\n                    text \r\n                    ? \r\n                        <p \r\n                            style={{ fontSize: fontSize }}\r\n                        >\r\n                            {/* Si text tiene 'contact.', traducimos el texto, si no, lo ponemos tal cual */}\r\n                            { text.includes('contact.') ? t(text) : text }\r\n                        </p>\r\n                    : \r\n                        <SocialLinks displayBlock={{ display: 'block' }} />\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nContactCardsItem.propTypes = {\r\n    className: PropTypes.string.isRequired,\r\n    icon: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    text: PropTypes.string,\r\n}\r\n\r\nContactCardsItem.defaultProps = {\r\n    fontSize : 'auto'\r\n}","const contactInfoData = [\r\n    {\r\n        id: 'contact-header',\r\n        className: 'col-md-12',\r\n        icon: 'bx bx-chat',\r\n        title: 'contact.get-in-touch',\r\n        text: 'contact.header-text',\r\n        fontSize: '1rem'\r\n    },\r\n    {\r\n        id: 'contact-social-profiles',\r\n        className: 'col-md-4 mt-4',\r\n        icon: 'bx bx-share-alt',\r\n        title: 'contact.social-profiles',\r\n    },\r\n    {\r\n        id: 'contact-email',\r\n        className: 'col-md-4 mt-4',\r\n        icon: 'bx bx-envelope',\r\n        title: 'contact.email-me',\r\n        text: ['gabriel','.diaz','.amador','.num','.13','@','gmail.com'].join(''),\r\n        fontSize: '0.75rem'\r\n    },\r\n    {\r\n        id: 'contact-phone',\r\n        className: 'col-md-4 mt-4',\r\n        icon: 'bx bx-phone-call',\r\n        title: 'contact.call-me',\r\n        text: ['+52 ','22 ','22 ','52 ','03 ','42'].join('')\r\n    },\r\n];\r\n\r\nexport default contactInfoData;","// * React Hooks\r\nimport React from 'react';\r\n\r\n// * Components\r\nimport { ContactCardsItem } from './ContactCardsItem';\r\n\r\n// * Data\r\nimport contactInfoData from '../../../data/contactInfoData';\r\n\r\nexport const ContactCards = () => {\r\n    return (\r\n        <div className=\"row mt-2\">\r\n            {\r\n                contactInfoData.map( item => <ContactCardsItem key={ item.id } { ...item } /> )\r\n            }\r\n        </div>\r\n    );\r\n}","/**\r\n * Metodo para encontrar a los campos de textos que estén vacios y que tenga la propiedad required\r\n * \r\n * @param  {} {required\r\n * @param  {} value}\r\n */\r\n const isEmptyInput = ({required, value}, index, array) => {\r\n    if(required === false)\r\n        return false;\r\n    return value === null || value.length === 0 || /^\\s+$/.test(value);\r\n}\r\n\r\nexport default isEmptyInput;","import Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport '@sweetalert2/theme-dark/dark.css';\r\n\r\nconst swalToast = (icon, title, position) => {\r\n    const MySwal = withReactContent(Swal);\r\n    MySwal.fire({\r\n        icon,\r\n        title,\r\n        toast: true,\r\n        position,\r\n        showConfirmButton: false,\r\n        timer: 5000,\r\n        timerProgressBar: true,\r\n    });\r\n}\r\n\r\nexport default swalToast;\r\n","// * React Hooks\r\nimport React, { useRef } from 'react';\r\n\r\n// * Hooks and libraries\r\nimport emailjs from 'emailjs-com';\r\nimport ReCAPTCHA from 'react-google-recaptcha';\r\nimport { useLang } from '../../../hooks/useLang';\r\nimport { useForm } from '../../../hooks/useForm';\r\n\r\n// * Helpers\r\nimport select from '../../../helpers/select';\r\nimport swalToast from '../../../helpers/swalToast';\r\n\r\nexport const FormContact = () => {\r\n\r\n    // Authentication CORS\r\n    window.recaptchaOptions = {\r\n        useRecaptchaNet: true,\r\n    };\r\n\r\n    // UseLang\r\n    const [ t ] = useLang();\r\n\r\n    // recaptchaRef\r\n    const recaptchaRef = useRef();\r\n\r\n    // UseForm\r\n    const [ form, handleInputChange, reset, validateForm ] = useForm({\r\n        name: '',\r\n        email: '',\r\n        subject: '',\r\n        message: ''\r\n    });\r\n    const { name, email, subject, message } = form;\r\n\r\n    // Form\r\n    const handleSubmit = async(e) => {\r\n        e.preventDefault();\r\n\r\n        // Validate Form\r\n        const formElements = select('#formContact input, #formContact textarea', true);\r\n        if ( !validateForm(formElements) ){\r\n            // Reset Recaptcha\r\n            recaptchaRef.current.reset();\r\n            return false;\r\n        }\r\n        // Validate Recaptcha\r\n        const token = await recaptchaRef.current.executeAsync();\r\n        if ( typeof token !== 'string' ) {\r\n            recaptchaRef.current.reset();\r\n            swalToast('error', t('errors.recaptcha-token-invalid'), 'bottom-end');\r\n            return false;\r\n        }\r\n\r\n        // Send Email\r\n        emailjs.sendForm('service_ue20u7k', 'template_udquiaf', e.target, 'user_5mpFv6mmg2y2NuNaoHL0w')\r\n        .then(() => {\r\n            reset();\r\n            // Reset Recaptcha\r\n            recaptchaRef.current.reset();\r\n            swalToast('success', t('messages.email-sent-text'), 'bottom-end');\r\n        }, \r\n        (error) => swalToast('error', error.text, 'bottom-end') );\r\n    }\r\n\r\n    return (\r\n        <form \r\n            id=\"formContact\" \r\n            className=\"php-email-form mt-4 row g-3\"\r\n            onSubmit={ handleSubmit }\r\n        >\r\n            <div className=\"col-md-6\">\r\n                <input \r\n                    className=\"form-control\" \r\n                    required\r\n                    type=\"text\" \r\n                    name=\"name\" \r\n                    placeholder={ t('form.your-name') }\r\n                    value={ name } \r\n                    onChange={ handleInputChange }\r\n                    pattern=\"[a-zA-ZÀ-ÿ\\u00f1\\u00d1]+(\\s*[a-zA-ZÀ-ÿ\\u00f1\\u00d1]*)*\"\r\n                    title={ t('form.only-alphabetic') }\r\n                />\r\n                <div className=\"invalid-feedback\">\r\n                    { t('form.field-requied') }\r\n                </div>{/* /.invalid-feedback */}\r\n            </div>{/* /.col-md-6 */}\r\n            <div className=\"col-md-6\">\r\n                <input \r\n                    className=\"form-control\" \r\n                    required\r\n                    type=\"email\" \r\n                    name=\"email\" \r\n                    placeholder={ t('form.your-email') }\r\n                    value={ email } \r\n                    onChange={ handleInputChange }\r\n                    pattern=\"[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)*@[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)*[.][a-zA-Z]{1,5}\"\r\n                    title=\"ej. example@email.com\"    \r\n                />\r\n                <div className=\"invalid-feedback\">\r\n                    { t('form.field-requied') }\r\n                </div>{/* /.invalid-feedback */}\r\n            </div>{/* /.col-md-6 */}\r\n            <div className=\"col-md-12\">\r\n                <input \r\n                    className=\"form-control\" \r\n                    required\r\n                    type=\"text\" \r\n                    name=\"subject\" \r\n                    placeholder={ t('form.subject') }\r\n                    value={ subject } \r\n                    onChange={ handleInputChange }\r\n                />\r\n                <div className=\"invalid-feedback\">\r\n                    { t('form.field-requied') }\r\n                </div>{/* /.invalid-feedback */}\r\n            </div>{/* /.col-md-12 */}\r\n            <div className=\"col-md-12\">\r\n                <textarea\r\n                    className=\"form-control\"\r\n                    required\r\n                    name=\"message\"\r\n                    placeholder={ t('form.message') }\r\n                    rows=\"5\"\r\n                    value={ message }\r\n                    onChange={ handleInputChange }\r\n                />\r\n                <div className=\"invalid-feedback\">\r\n                    { t('form.field-requied') }\r\n                </div>{/* /.invalid-feedback */}\r\n            </div>{/* /.col-md-12 */}\r\n            <div className=\"text-center\">\r\n                <button \r\n                    type=\"submit\" \r\n                    className=\"button\"\r\n                >\r\n                    { t('form.send') }\r\n                </button>\r\n            </div>{/* /.text-center */}\r\n            \r\n            <ReCAPTCHA\r\n                onErrored={ () => console.error( 'Error Catpcha.' ) }\r\n                ref={ recaptchaRef }\r\n                theme=\"dark\"\r\n                sitekey=\"6LehFckaAAAAANu-UZkwlX_cYNHoko69VdVDMl0q\"\r\n                size=\"invisible\"\r\n            />\r\n        </form>\r\n    );\r\n}","// * React Hooks\r\nimport { useState } from 'react';\r\n\r\n// * Helpers\r\nimport isEmptyInput from '../helpers/isEmptyInput';\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    const [form, setForm] = useState(initialState);\r\n    const handleInputChange = ({target}) => {\r\n        setForm({\r\n            ...form,\r\n            [target.name] : target.value\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Valida a todos las cajas de texto antes de ser enviados al servidor\r\n     * \r\n     * @param  {Element} FormElements El formulario a validar\r\n     * @returns {Boolean} La respuesta de un formulario válido o inválido\r\n     */\r\n    const validateForm = (formElements) => {\r\n        let isValidForm = true;\r\n\r\n        formElements.map( item => {\r\n            if ( isEmptyInput(item) ) {\r\n                item.classList.add('is-invalid');\r\n                isValidForm = false;\r\n            } else\r\n                item.classList.remove('is-invalid');\r\n            return isValidForm;\r\n        });\r\n        return isValidForm;\r\n    }\r\n\r\n    const reset = () => setForm(initialState);\r\n\r\n    return [ form, handleInputChange, reset, validateForm ];\r\n}","// * React Hooks\r\nimport React from 'react';\r\n\r\n// * Hooks and libraries\r\nimport { useSectionShow } from '../../hooks/useSectionShow';\r\nimport { useLang } from '../../hooks/useLang';\r\n\r\n// * Components\r\nimport { TourComponent } from '../includes/react-tour/TourComponent';\r\nimport { ContactCards } from '../includes/contact/ContactCards';\r\nimport { FormContact } from '../includes/contact/FormContact';\r\n\r\n// * Types\r\nimport types from '../../types/types';\r\n\r\nexport const Contact = () => {\r\n    const sectionShow = useSectionShow();\r\n    const [ t ] = useLang();\r\n\r\n    return (\r\n        // ======= Contact Section =======\r\n        <section id=\"contact\" className={ `contact ${sectionShow}` }>\r\n\r\n            <TourComponent pageName=\"contact\" type={ types.contact } />\r\n            \r\n            <div className=\"container\">\r\n\r\n                <div className=\"section-title\">\r\n                    <h2>{ t('header.contact') }</h2>\r\n                    <p>{ t('contact.contact-me') }</p>\r\n                </div>{/* /.section-title */}\r\n\r\n                <ContactCards />\r\n                <FormContact />\r\n\r\n            </div>{/* /.container */}\r\n\r\n        </section>/* End Contact Section */\r\n    );\r\n}","// * React Hooks\r\nimport React from 'react';\r\n\r\n// * Hooks and libraries\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useLang } from '../../hooks/useLang';\r\nimport { useSectionShow } from '../../hooks/useSectionShow';\r\n\r\nexport const Error404 = () => {\r\n    const [ t ] = useLang();\r\n    const sectionShow = useSectionShow();\r\n\r\n    const { replace } = useHistory();\r\n    const handleReplace = () => replace('/home');\r\n\r\n    return (\r\n        // ======= Error404 Section =======\r\n        <section className={ sectionShow ? sectionShow : '' }>\r\n            <div className=\"container\">\r\n\r\n                <div className=\"error-container\">\r\n                    <div className=\"header\">\r\n                        <h1>404</h1>\r\n                    </div>{/* /.header */}\r\n                    <h2>Not Found</h2>\r\n                    <p>{ t('errors.not-found-text') }</p>\r\n                    <button\r\n                        className=\"mt-1 button\"\r\n                        onClick={ handleReplace }\r\n                    >\r\n                        { t('header.back-home') }\r\n                    </button>\r\n                </div>{/* /.error-header */}\r\n\r\n            </div>{/* /.container */}\r\n        </section>/* End Error404 Section */\r\n    );\r\n}","// * React Hooks\r\nimport React from 'react';\r\n\r\n// * Hooks and libraries\r\nimport { Redirect, Route, Switch, useLocation } from 'react-router';\r\n\r\n// * Components\r\nimport { Header } from '../components/layouts/Header';\r\nimport { Resume } from '../components/pages/Resume';\r\nimport { Services } from '../components/pages/Services';\r\nimport { Contact } from '../components/pages/Contact';\r\nimport { Error404 } from '../components/errors/Error404';\r\nconst About = React.lazy( () => import('../components/pages/About') );\r\nconst Portfolio = React.lazy( () => import('../components/pages/Portfolio') );\r\n\r\nexport const AppRouter = () => {\r\n    const { pathname } = useLocation();\r\n    return (\r\n        <>\r\n            <Header isHome={ pathname === '/home' } />\r\n            <Switch>\r\n                <Route exact path=\"/home\" />\r\n                <Route exact path=\"/about\" component={ About } />   \r\n                <Route exact path=\"/resume\" component={ Resume } />   \r\n                <Route exact path=\"/services\" component={ Services } />   \r\n                <Route exact path=\"/portfolio\" component={ Portfolio } />   \r\n                <Route exact path=\"/contact\" component={ Contact } />   \r\n                { pathname === '/' ? \r\n                    <Redirect to=\"/home\" /> : \r\n                    <Route component={ Error404 } />  \r\n                }\r\n            </Switch>\r\n        </>\r\n    );\r\n}\r\n","// * React Hooks\r\nimport React from 'react';\r\n\r\n// * Hooks and libraries\r\nimport { useSectionShow } from '../../../hooks/useSectionShow';\r\n\r\nexport const LoadComponentDefault = () => {\r\n    const sectionShow = useSectionShow();\r\n    \r\n    return (\r\n        // ======= Loading Section =======\r\n        <section className={sectionShow}>\r\n\r\n            <div className=\"container\">\r\n\r\n                <div className=\"text-center\">\r\n                    <h1>{ 'Loading...' }</h1>\r\n                    <br />\r\n                    <div className=\"spinner-border\" role=\"status\" />\r\n                </div>{/* /.text-center */}\r\n\r\n            </div>{/* /.container */}\r\n\r\n        </section>/* End Loading Section */\r\n    );\r\n}","import i18n from 'i18next';\r\nimport Backend from 'i18next-http-backend';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\n\r\ni18n\r\n.use(Backend)\r\n.use(LanguageDetector)\r\n.use(initReactI18next)\r\n.init({\r\n    backend: {\r\n        // eslint-disable-next-line no-path-concat\r\n        loadPath: 'locales/{{lng}}/{{ns}}.json',\r\n        // eslint-disable-next-line no-path-concat\r\n        addPath: 'locales/{{lng}}/{{ns}}.missing.json'\r\n    },\r\n    fallbackLng: 'en',\r\n});","// * React Hooks\nimport React, { Suspense } from 'react';\n\n// * Hooks and libraries\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from 'react-router-dom';\n\n// * Routes\nimport { AppRouter } from './routes/AppRouter';\n\n// * Components\nimport { LoadComponentDefault } from './components/includes/loading/LoadComponentDefault';\n\nimport './config/i18next-config';\nimport './css/style.css';\n\nexport const App = () => {\n\n    return (\n        <Router basename={process.env.PUBLIC_URL}>\n            <div>\n                <Suspense fallback={ <LoadComponentDefault /> }>\n                    <Switch>\n                        <Route path=\"/\" component={ AppRouter } />\n                    </Switch>\n                </Suspense>\n            </div>\n        </Router>\n    )\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}